\begin{Verbatim}[commandchars=\\\{\}]
\PYG{k+kn}{import} \PYG{n+nn}{random}
\PYG{k+kn}{import} \PYG{n+nn}{logging}
\PYG{n}{logging}\PYG{o}{.}\PYG{n}{getLogger}\PYG{p}{()}\PYG{o}{.}\PYG{n}{setLevel}\PYG{p}{(}\PYG{n}{logging}\PYG{o}{.}\PYG{n}{INFO}\PYG{p}{)}

\PYG{k}{def} \PYG{n+nf}{custom\PYGZus{}search}\PYG{p}{(}\PYG{n}{N}\PYG{p}{,} \PYG{n}{seed}\PYG{p}{):}
    \PYG{n}{goal} \PYG{o}{=} \PYG{n+nb}{set}\PYG{p}{(}\PYG{n+nb}{range}\PYG{p}{(}\PYG{n}{N}\PYG{p}{))}
    \PYG{n}{covered} \PYG{o}{=} \PYG{n+nb}{set}\PYG{p}{()}
    \PYG{n}{solution} \PYG{o}{=} \PYG{n+nb}{list}\PYG{p}{()}
    \PYG{n}{all\PYGZus{}lists} \PYG{o}{=} \PYG{n}{problem}\PYG{p}{(}\PYG{n}{N}\PYG{p}{,} \PYG{n}{seed}\PYG{o}{=}\PYG{l+m+mi}{42}\PYG{p}{)}
    \PYG{n}{random}\PYG{o}{.}\PYG{n}{seed}\PYG{p}{(}\PYG{n}{seed}\PYG{p}{)}
    \PYG{n}{random}\PYG{o}{.}\PYG{n}{shuffle}\PYG{p}{(}\PYG{n}{all\PYGZus{}lists}\PYG{p}{)} \PYG{c+c1}{\PYGZsh{}shuffle list to pop random}
    \PYG{k}{while} \PYG{n}{goal} \PYG{o}{!=} \PYG{n}{covered}\PYG{p}{:} \PYG{c+c1}{\PYGZsh{}while set of covered nums is not equal to goal}
        \PYG{n}{x} \PYG{o}{=} \PYG{n}{all\PYGZus{}lists}\PYG{o}{.}\PYG{n}{pop}\PYG{p}{(}\PYG{l+m+mi}{0}\PYG{p}{)} \PYG{c+c1}{\PYGZsh{}pick a list from all\PYGZus{}lists}
        \PYG{k}{if} \PYG{o+ow}{not} \PYG{n+nb}{set}\PYG{p}{(}\PYG{n}{x}\PYG{p}{)} \PYG{o}{\PYGZlt{}} \PYG{n}{covered}\PYG{p}{:} \PYG{c+c1}{\PYGZsh{}if set of picked list is not a subset of covered}
            \PYG{n}{solution}\PYG{o}{.}\PYG{n}{append}\PYG{p}{(}\PYG{n}{x}\PYG{p}{)} \PYG{c+c1}{\PYGZsh{}append it to the solution}
            \PYG{n}{covered} \PYG{o}{|=} \PYG{n+nb}{set}\PYG{p}{(}\PYG{n}{x}\PYG{p}{)} \PYG{c+c1}{\PYGZsh{}covered gets updated and becomes a union of covered plus picked set}


    \PYG{n}{logging}\PYG{o}{.}\PYG{n}{info}\PYG{p}{(}
        \PYG{l+s+sa}{f}\PYG{l+s+s2}{\PYGZdq{}custom search solution for N=}\PYG{l+s+si}{\PYGZob{}}\PYG{n}{N}\PYG{l+s+si}{\PYGZcb{}}\PYG{l+s+s2}{: w=}\PYG{l+s+si}{\PYGZob{}}\PYG{n+nb}{sum}\PYG{p}{(}\PYG{n+nb}{len}\PYG{p}{(}\PYG{n}{\PYGZus{}}\PYG{p}{)} \PYG{k}{for} \PYG{n}{\PYGZus{}} \PYG{o+ow}{in} \PYG{n}{solution}\PYG{p}{)}\PYG{l+s+si}{\PYGZcb{}}\PYG{l+s+s2}{ (bloat=}\PYG{l+s+si}{\PYGZob{}}\PYG{p}{(}\PYG{n+nb}{sum}\PYG{p}{(}\PYG{n+nb}{len}\PYG{p}{(}\PYG{n}{\PYGZus{}}\PYG{p}{)} \PYG{k}{for} \PYG{n}{\PYGZus{}} \PYG{o+ow}{in} \PYG{n}{solution}\PYG{p}{)}\PYG{o}{\PYGZhy{}}\PYG{n}{N}\PYG{p}{)}\PYG{o}{/}\PYG{n}{N}\PYG{o}{*}\PYG{l+m+mi}{100}\PYG{l+s+si}{:}\PYG{l+s+s2}{.0f}\PYG{l+s+si}{\PYGZcb{}}\PYG{l+s+s2}{\PYGZpc{})\PYGZdq{}}
    \PYG{p}{)}
\PYG{n}{logging}\PYG{o}{.}\PYG{n}{getLogger}\PYG{p}{()}\PYG{o}{.}\PYG{n}{setLevel}\PYG{p}{(}\PYG{n}{logging}\PYG{o}{.}\PYG{n}{DEBUG}\PYG{p}{)}
\PYG{k}{for} \PYG{n}{N} \PYG{o+ow}{in} \PYG{p}{[}\PYG{l+m+mi}{5}\PYG{p}{,} \PYG{l+m+mi}{10}\PYG{p}{,} \PYG{l+m+mi}{20}\PYG{p}{,} \PYG{l+m+mi}{100}\PYG{p}{,} \PYG{l+m+mi}{500}\PYG{p}{,} \PYG{l+m+mi}{1000}\PYG{p}{]:}
    \PYG{n}{custom\PYGZus{}search}\PYG{p}{(}\PYG{n}{N}\PYG{p}{,} \PYG{l+m+mi}{99}\PYG{p}{)}
\end{Verbatim}
