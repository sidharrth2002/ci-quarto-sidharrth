\begin{Verbatim}[commandchars=\\\{\}]
\PYG{k+kn}{from} \PYG{n+nn}{copy} \PYG{k+kn}{import} \PYG{n}{deepcopy}
\PYG{k+kn}{from} \PYG{n+nn}{functools} \PYG{k+kn}{import} \PYG{n}{lru\PYGZus{}cache}
\PYG{k+kn}{from} \PYG{n+nn}{itertools} \PYG{k+kn}{import} \PYG{n}{accumulate}
\PYG{k+kn}{import} \PYG{n+nn}{math}
\PYG{k+kn}{from} \PYG{n+nn}{operator} \PYG{k+kn}{import} \PYG{n}{xor}
\PYG{k+kn}{from} \PYG{n+nn}{evolved\PYGZus{}nim} \PYG{k+kn}{import} \PYG{n}{BrilliantEvolvedAgent}
\PYG{k+kn}{import} \PYG{n+nn}{logging}
\PYG{k+kn}{from} \PYG{n+nn}{lib} \PYG{k+kn}{import} \PYG{n}{Nim}

\PYG{n}{logging}\PYG{o}{.}\PYG{n}{basicConfig}\PYG{p}{(}\PYG{n}{level}\PYG{o}{=}\PYG{n}{logging}\PYG{o}{.}\PYG{n}{INFO}\PYG{p}{)}

\PYG{k}{class} \PYG{n+nc}{MinMaxAgent}\PYG{p}{:}
    \PYG{k}{def} \PYG{n+nf+fm}{\PYGZus{}\PYGZus{}init\PYGZus{}\PYGZus{}}\PYG{p}{(}\PYG{n+nb+bp}{self}\PYG{p}{):}
        \PYG{n+nb+bp}{self}\PYG{o}{.}\PYG{n}{num\PYGZus{}moves} \PYG{o}{=} \PYG{l+m+mi}{0}

    \PYG{k}{def} \PYG{n+nf}{nim\PYGZus{}sum}\PYG{p}{(}\PYG{n+nb+bp}{self}\PYG{p}{,} \PYG{n}{nim}\PYG{p}{:} \PYG{n}{Nim}\PYG{p}{):}
        \PYG{l+s+sd}{\PYGZsq{}\PYGZsq{}\PYGZsq{}}
\PYG{l+s+sd}{        Returns the nim sum of the current game board}
\PYG{l+s+sd}{        by taking an XOR of all the rows.}
\PYG{l+s+sd}{        Ideally, agent should try to leave nim sum of 0 at the end of turn}
\PYG{l+s+sd}{        \PYGZsq{}\PYGZsq{}\PYGZsq{}}
        \PYG{o}{*}\PYG{n}{\PYGZus{}}\PYG{p}{,} \PYG{n}{result} \PYG{o}{=} \PYG{n}{accumulate}\PYG{p}{(}\PYG{n}{nim}\PYG{o}{.}\PYG{n}{rows}\PYG{p}{,} \PYG{n}{xor}\PYG{p}{)}
        \PYG{k}{return} \PYG{n}{result}

    \PYG{k}{def} \PYG{n+nf}{evaluate}\PYG{p}{(}\PYG{n+nb+bp}{self}\PYG{p}{,} \PYG{n}{nim}\PYG{p}{:} \PYG{n}{Nim}\PYG{p}{,} \PYG{n}{is\PYGZus{}maximizing}\PYG{p}{:} \PYG{n+nb}{bool}\PYG{p}{):}
        \PYG{l+s+sd}{\PYGZsq{}\PYGZsq{}\PYGZsq{}}
\PYG{l+s+sd}{        Returns the evaluation of the current game board}
\PYG{l+s+sd}{        \PYGZsq{}\PYGZsq{}\PYGZsq{}}
        \PYG{k}{if} \PYG{n+nb}{all}\PYG{p}{(}\PYG{n}{row} \PYG{o}{==} \PYG{l+m+mi}{0} \PYG{k}{for} \PYG{n}{row} \PYG{o+ow}{in} \PYG{n}{nim}\PYG{o}{.}\PYG{n}{rows}\PYG{p}{):}
            \PYG{k}{return} \PYG{o}{\PYGZhy{}}\PYG{l+m+mi}{1} \PYG{k}{if} \PYG{n}{is\PYGZus{}maximizing} \PYG{k}{else} \PYG{l+m+mi}{1}
        \PYG{k}{else}\PYG{p}{:}
            \PYG{k}{return} \PYG{o}{\PYGZhy{}}\PYG{l+m+mi}{1}

    \PYG{n+nd}{@lru\PYGZus{}cache}\PYG{p}{(}\PYG{n}{maxsize}\PYG{o}{=}\PYG{l+m+mi}{1000}\PYG{p}{)}
    \PYG{k}{def} \PYG{n+nf}{minmax}\PYG{p}{(}\PYG{n+nb+bp}{self}\PYG{p}{,} \PYG{n}{nim}\PYG{p}{:} \PYG{n}{Nim}\PYG{p}{,} \PYG{n}{depth}\PYG{p}{:} \PYG{n+nb}{int}\PYG{p}{,} \PYG{n}{maximizing\PYGZus{}player}\PYG{p}{:} \PYG{n+nb}{bool}\PYG{p}{,} \PYG{n}{alpha}\PYG{p}{:} \PYG{n+nb}{int} \PYG{o}{=} \PYG{o}{\PYGZhy{}}\PYG{l+m+mi}{1}\PYG{p}{,} \PYG{n}{beta}\PYG{p}{:} \PYG{n+nb}{int} \PYG{o}{=} \PYG{l+m+mi}{1}\PYG{p}{,} \PYG{n}{max\PYGZus{}depth}\PYG{p}{:} \PYG{n+nb}{int} \PYG{o}{=} \PYG{l+m+mi}{7}\PYG{p}{):}
        \PYG{l+s+sd}{\PYGZsq{}\PYGZsq{}\PYGZsq{}}
\PYG{l+s+sd}{        Depth\PYGZhy{}limited Minimax algorithm to find the best move with alpha\PYGZhy{}beta pruning and depth limit}
\PYG{l+s+sd}{        \PYGZsq{}\PYGZsq{}\PYGZsq{}}
        \PYG{n}{logging}\PYG{o}{.}\PYG{n}{info}\PYG{p}{(}\PYG{l+s+s2}{\PYGZdq{}Depth \PYGZdq{}}\PYG{p}{,} \PYG{n}{depth}\PYG{p}{)}
        \PYG{k}{if} \PYG{n}{depth} \PYG{o}{==} \PYG{l+m+mi}{0} \PYG{o+ow}{or} \PYG{n}{nim}\PYG{o}{.}\PYG{n}{goal}\PYG{p}{()} \PYG{o+ow}{or} \PYG{n}{depth} \PYG{o}{==} \PYG{n}{max\PYGZus{}depth}\PYG{p}{:}
            \PYG{c+c1}{\PYGZsh{} logging.info(\PYGZdq{}Depth \PYGZdq{}, depth)}
            \PYG{c+c1}{\PYGZsh{} logging.info(\PYGZdq{}Nim goal \PYGZdq{}, nim.goal())}
            \PYG{k}{return} \PYG{n+nb+bp}{self}\PYG{o}{.}\PYG{n}{evaluate}\PYG{p}{(}\PYG{n}{nim}\PYG{p}{,} \PYG{n}{maximizing\PYGZus{}player}\PYG{p}{)}

        \PYG{k}{if} \PYG{n}{maximizing\PYGZus{}player}\PYG{p}{:}
            \PYG{n}{value} \PYG{o}{=} \PYG{o}{\PYGZhy{}}\PYG{n}{math}\PYG{o}{.}\PYG{n}{inf}
            \PYG{k}{for} \PYG{n}{r}\PYG{p}{,} \PYG{n}{c} \PYG{o+ow}{in} \PYG{n+nb}{enumerate}\PYG{p}{(}\PYG{n}{nim}\PYG{o}{.}\PYG{n}{rows}\PYG{p}{):}
                \PYG{k}{for} \PYG{n}{o} \PYG{o+ow}{in} \PYG{n+nb}{range}\PYG{p}{(}\PYG{l+m+mi}{1}\PYG{p}{,} \PYG{n}{c}\PYG{o}{+}\PYG{l+m+mi}{1}\PYG{p}{):}
                    \PYG{c+c1}{\PYGZsh{} make copy of nim object before running a nimming operation}
                    \PYG{n}{replicated\PYGZus{}nim} \PYG{o}{=} \PYG{n}{deepcopy}\PYG{p}{(}\PYG{n}{nim}\PYG{p}{)}
                    \PYG{n}{replicated\PYGZus{}nim}\PYG{o}{.}\PYG{n}{nimming\PYGZus{}remove}\PYG{p}{(}\PYG{n}{r}\PYG{p}{,} \PYG{n}{o}\PYG{p}{)}
                    \PYG{n}{value} \PYG{o}{=} \PYG{n+nb}{max}\PYG{p}{(}\PYG{n}{value}\PYG{p}{,} \PYG{n+nb+bp}{self}\PYG{o}{.}\PYG{n}{minmax}\PYG{p}{(}\PYG{n}{replicated\PYGZus{}nim}\PYG{p}{,} \PYG{n}{depth}\PYG{o}{\PYGZhy{}}\PYG{l+m+mi}{1}\PYG{p}{,} \PYG{k+kc}{False}\PYG{p}{,} \PYG{n}{alpha}\PYG{p}{,} \PYG{n}{beta}\PYG{p}{))}
                    \PYG{n}{alpha} \PYG{o}{=} \PYG{n+nb}{max}\PYG{p}{(}\PYG{n}{alpha}\PYG{p}{,} \PYG{n}{value}\PYG{p}{)}
                    \PYG{k}{if} \PYG{n}{beta} \PYG{o}{\PYGZlt{}=} \PYG{n}{alpha}\PYG{p}{:}
                        \PYG{n}{logging}\PYG{o}{.}\PYG{n}{info}\PYG{p}{(}\PYG{l+s+s2}{\PYGZdq{}Pruned\PYGZdq{}}\PYG{p}{)}
                        \PYG{k}{break}
            \PYG{k}{return} \PYG{n}{value}
        \PYG{k}{else}\PYG{p}{:}
            \PYG{n}{value} \PYG{o}{=} \PYG{n}{math}\PYG{o}{.}\PYG{n}{inf}
            \PYG{k}{for} \PYG{n}{r}\PYG{p}{,} \PYG{n}{c} \PYG{o+ow}{in} \PYG{n+nb}{enumerate}\PYG{p}{(}\PYG{n}{nim}\PYG{o}{.}\PYG{n}{rows}\PYG{p}{):}
                \PYG{k}{for} \PYG{n}{o} \PYG{o+ow}{in} \PYG{n+nb}{range}\PYG{p}{(}\PYG{l+m+mi}{1}\PYG{p}{,} \PYG{n}{c}\PYG{o}{+}\PYG{l+m+mi}{1}\PYG{p}{):}
                    \PYG{c+c1}{\PYGZsh{} make copy of nim object before running a nimming operation}
                    \PYG{n}{replicated\PYGZus{}nim} \PYG{o}{=} \PYG{n}{deepcopy}\PYG{p}{(}\PYG{n}{nim}\PYG{p}{)}
                    \PYG{n}{replicated\PYGZus{}nim}\PYG{o}{.}\PYG{n}{nimming\PYGZus{}remove}\PYG{p}{(}\PYG{n}{r}\PYG{p}{,} \PYG{n}{o}\PYG{p}{)}
                    \PYG{n}{value} \PYG{o}{=} \PYG{n+nb}{min}\PYG{p}{(}\PYG{n}{value}\PYG{p}{,} \PYG{n+nb+bp}{self}\PYG{o}{.}\PYG{n}{minmax}\PYG{p}{(}\PYG{n}{replicated\PYGZus{}nim}\PYG{p}{,} \PYG{n}{depth}\PYG{o}{\PYGZhy{}}\PYG{l+m+mi}{1}\PYG{p}{,} \PYG{k+kc}{True}\PYG{p}{,} \PYG{n}{alpha}\PYG{p}{,} \PYG{n}{beta}\PYG{p}{))}
                    \PYG{n}{beta} \PYG{o}{=} \PYG{n+nb}{min}\PYG{p}{(}\PYG{n}{beta}\PYG{p}{,} \PYG{n}{value}\PYG{p}{)}
                    \PYG{k}{if} \PYG{n}{beta} \PYG{o}{\PYGZlt{}=} \PYG{n}{alpha}\PYG{p}{:}
                        \PYG{n}{logging}\PYG{o}{.}\PYG{n}{info}\PYG{p}{(}\PYG{l+s+s2}{\PYGZdq{}Pruned\PYGZdq{}}\PYG{p}{)}
                        \PYG{k}{break}
            \PYG{k}{return} \PYG{n}{value}

    \PYG{k}{def} \PYG{n+nf}{play}\PYG{p}{(}\PYG{n+nb+bp}{self}\PYG{p}{,} \PYG{n}{nim}\PYG{p}{:} \PYG{n}{Nim}\PYG{p}{):}
        \PYG{l+s+sd}{\PYGZsq{}\PYGZsq{}\PYGZsq{}}
\PYG{l+s+sd}{        Agent returns the best move based on minimax algorithm}
\PYG{l+s+sd}{        \PYGZsq{}\PYGZsq{}\PYGZsq{}}
        \PYG{n}{possible\PYGZus{}moves} \PYG{o}{=} \PYG{p}{[]}
        \PYG{k}{for} \PYG{n}{r}\PYG{p}{,} \PYG{n}{c} \PYG{o+ow}{in} \PYG{n+nb}{enumerate}\PYG{p}{(}\PYG{n}{nim}\PYG{o}{.}\PYG{n}{rows}\PYG{p}{):}
            \PYG{k}{for} \PYG{n}{o} \PYG{o+ow}{in} \PYG{n+nb}{range}\PYG{p}{(}\PYG{l+m+mi}{1}\PYG{p}{,} \PYG{n}{c}\PYG{o}{+}\PYG{l+m+mi}{1}\PYG{p}{):}
                \PYG{c+c1}{\PYGZsh{} make copy of nim object before running a nimming operation}
                \PYG{n}{replicated\PYGZus{}nim} \PYG{o}{=} \PYG{n}{deepcopy}\PYG{p}{(}\PYG{n}{nim}\PYG{p}{)}
                \PYG{n}{replicated\PYGZus{}nim}\PYG{o}{.}\PYG{n}{nimming\PYGZus{}remove}\PYG{p}{(}\PYG{n}{r}\PYG{p}{,} \PYG{n}{o}\PYG{p}{)}
                \PYG{n}{possible\PYGZus{}moves}\PYG{o}{.}\PYG{n}{append}\PYG{p}{((}\PYG{n}{r}\PYG{p}{,} \PYG{n}{o}\PYG{p}{,} \PYG{n+nb+bp}{self}\PYG{o}{.}\PYG{n}{minmax}\PYG{p}{(}\PYG{n}{replicated\PYGZus{}nim}\PYG{p}{,} \PYG{l+m+mi}{10}\PYG{p}{,} \PYG{k+kc}{False}\PYG{p}{)))}
        \PYG{c+c1}{\PYGZsh{} sort possible moves by the value returned by minimax}
        \PYG{n}{possible\PYGZus{}moves}\PYG{o}{.}\PYG{n}{sort}\PYG{p}{(}\PYG{n}{key}\PYG{o}{=}\PYG{k}{lambda} \PYG{n}{x}\PYG{p}{:} \PYG{n}{x}\PYG{p}{[}\PYG{l+m+mi}{2}\PYG{p}{],} \PYG{n}{reverse}\PYG{o}{=}\PYG{k+kc}{True}\PYG{p}{)}
        \PYG{c+c1}{\PYGZsh{} return the best move}
        \PYG{k}{return} \PYG{n}{possible\PYGZus{}moves}\PYG{p}{[}\PYG{l+m+mi}{0}\PYG{p}{][}\PYG{l+m+mi}{0}\PYG{p}{],} \PYG{n}{possible\PYGZus{}moves}\PYG{p}{[}\PYG{l+m+mi}{0}\PYG{p}{][}\PYG{l+m+mi}{1}\PYG{p}{]}

    \PYG{k}{def} \PYG{n+nf}{battle}\PYG{p}{(}\PYG{n+nb+bp}{self}\PYG{p}{,} \PYG{n}{opponent}\PYG{p}{,} \PYG{n}{num\PYGZus{}games}\PYG{o}{=}\PYG{l+m+mi}{1000}\PYG{p}{):}
        \PYG{l+s+sd}{\PYGZsq{}\PYGZsq{}\PYGZsq{}}
\PYG{l+s+sd}{        Battle this agent against another agent}
\PYG{l+s+sd}{        \PYGZsq{}\PYGZsq{}\PYGZsq{}}
        \PYG{n}{wins} \PYG{o}{=} \PYG{l+m+mi}{0}
        \PYG{k}{for} \PYG{n}{\PYGZus{}} \PYG{o+ow}{in} \PYG{n+nb}{range}\PYG{p}{(}\PYG{n}{num\PYGZus{}games}\PYG{p}{):}
            \PYG{n}{nim} \PYG{o}{=} \PYG{n}{Nim}\PYG{p}{()}
            \PYG{k}{while} \PYG{o+ow}{not} \PYG{n}{nim}\PYG{o}{.}\PYG{n}{goal}\PYG{p}{():}
                \PYG{n}{nim}\PYG{o}{.}\PYG{n}{nimming\PYGZus{}remove}\PYG{p}{(}\PYG{o}{*}\PYG{n+nb+bp}{self}\PYG{o}{.}\PYG{n}{play}\PYG{p}{(}\PYG{n}{nim}\PYG{p}{))}
                \PYG{k}{if} \PYG{n+nb}{sum}\PYG{p}{(}\PYG{n}{nim}\PYG{o}{.}\PYG{n}{rows}\PYG{p}{)} \PYG{o}{==} \PYG{l+m+mi}{0}\PYG{p}{:}
                    \PYG{k}{break}
                \PYG{n}{nim}\PYG{o}{.}\PYG{n}{nimming\PYGZus{}remove}\PYG{p}{(}\PYG{o}{*}\PYG{n}{opponent}\PYG{o}{.}\PYG{n}{play}\PYG{p}{(}\PYG{n}{nim}\PYG{p}{))}
            \PYG{k}{if} \PYG{n+nb}{sum}\PYG{p}{(}\PYG{n}{nim}\PYG{o}{.}\PYG{n}{rows}\PYG{p}{)} \PYG{o}{==} \PYG{l+m+mi}{0}\PYG{p}{:}
                \PYG{n}{wins} \PYG{o}{+=} \PYG{l+m+mi}{1}
        \PYG{k}{return} \PYG{n}{wins}

\PYG{k}{if} \PYG{n+nv+vm}{\PYGZus{}\PYGZus{}name\PYGZus{}\PYGZus{}} \PYG{o}{==} \PYG{l+s+s2}{\PYGZdq{}\PYGZus{}\PYGZus{}main\PYGZus{}\PYGZus{}\PYGZdq{}}\PYG{p}{:}

    \PYG{n}{rounds} \PYG{o}{=} \PYG{l+m+mi}{10}

    \PYG{n}{minmax\PYGZus{}wins} \PYG{o}{=} \PYG{l+m+mi}{0}
    \PYG{k}{for} \PYG{n}{i} \PYG{o+ow}{in} \PYG{n+nb}{range}\PYG{p}{(}\PYG{n}{rounds}\PYG{p}{):}
        \PYG{n}{nim} \PYG{o}{=} \PYG{n}{Nim}\PYG{p}{(}\PYG{n}{num\PYGZus{}rows}\PYG{o}{=}\PYG{l+m+mi}{5}\PYG{p}{)}
        \PYG{n}{agent} \PYG{o}{=} \PYG{n}{MinMaxAgent}\PYG{p}{()}
        \PYG{n}{random\PYGZus{}agent} \PYG{o}{=} \PYG{n}{BrilliantEvolvedAgent}\PYG{p}{()}
        \PYG{n}{player} \PYG{o}{=} \PYG{l+m+mi}{0}
        \PYG{k}{while} \PYG{o+ow}{not} \PYG{n}{nim}\PYG{o}{.}\PYG{n}{goal}\PYG{p}{():}
            \PYG{k}{if} \PYG{n}{player} \PYG{o}{==} \PYG{l+m+mi}{0}\PYG{p}{:}
                \PYG{n}{move} \PYG{o}{=} \PYG{n}{agent}\PYG{o}{.}\PYG{n}{play}\PYG{p}{(}\PYG{n}{nim}\PYG{p}{)}
                \PYG{n}{logging}\PYG{o}{.}\PYG{n}{info}\PYG{p}{(}\PYG{l+s+sa}{f}\PYG{l+s+s2}{\PYGZdq{}Minmax move }\PYG{l+s+si}{\PYGZob{}}\PYG{n}{agent}\PYG{o}{.}\PYG{n}{num\PYGZus{}moves}\PYG{l+s+si}{\PYGZcb{}}\PYG{l+s+s2}{: Removed }\PYG{l+s+si}{\PYGZob{}}\PYG{n}{move}\PYG{p}{[}\PYG{l+m+mi}{1}\PYG{p}{]}\PYG{l+s+si}{\PYGZcb{}}\PYG{l+s+s2}{ objects from row }\PYG{l+s+si}{\PYGZob{}}\PYG{n}{move}\PYG{p}{[}\PYG{l+m+mi}{0}\PYG{p}{]}\PYG{l+s+si}{\PYGZcb{}}\PYG{l+s+s2}{\PYGZdq{}}\PYG{p}{)}
                \PYG{n}{logging}\PYG{o}{.}\PYG{n}{info}\PYG{p}{(}\PYG{n}{nim}\PYG{o}{.}\PYG{n}{rows}\PYG{p}{)}
                \PYG{n}{nim}\PYG{o}{.}\PYG{n}{nimming\PYGZus{}remove}\PYG{p}{(}\PYG{o}{*}\PYG{n}{move}\PYG{p}{)}
            \PYG{k}{else}\PYG{p}{:}
                \PYG{n}{move} \PYG{o}{=} \PYG{n}{random\PYGZus{}agent}\PYG{o}{.}\PYG{n}{random\PYGZus{}agent}\PYG{p}{(}\PYG{n}{nim}\PYG{p}{)}
                \PYG{n}{logging}\PYG{o}{.}\PYG{n}{info}\PYG{p}{(}\PYG{l+s+sa}{f}\PYG{l+s+s2}{\PYGZdq{}Random move }\PYG{l+s+si}{\PYGZob{}}\PYG{n}{random\PYGZus{}agent}\PYG{o}{.}\PYG{n}{num\PYGZus{}moves}\PYG{l+s+si}{\PYGZcb{}}\PYG{l+s+s2}{: Removed }\PYG{l+s+si}{\PYGZob{}}\PYG{n}{move}\PYG{p}{[}\PYG{l+m+mi}{1}\PYG{p}{]}\PYG{l+s+si}{\PYGZcb{}}\PYG{l+s+s2}{ objects from row }\PYG{l+s+si}{\PYGZob{}}\PYG{n}{move}\PYG{p}{[}\PYG{l+m+mi}{0}\PYG{p}{]}\PYG{l+s+si}{\PYGZcb{}}\PYG{l+s+s2}{\PYGZdq{}}\PYG{p}{)}
                \PYG{n}{logging}\PYG{o}{.}\PYG{n}{info}\PYG{p}{(}\PYG{n}{nim}\PYG{o}{.}\PYG{n}{rows}\PYG{p}{)}
                \PYG{n}{nim}\PYG{o}{.}\PYG{n}{nimming\PYGZus{}remove}\PYG{p}{(}\PYG{o}{*}\PYG{n}{move}\PYG{p}{)}
            \PYG{n}{player} \PYG{o}{=} \PYG{l+m+mi}{1} \PYG{o}{\PYGZhy{}} \PYG{n}{player}

        \PYG{n}{winner} \PYG{o}{=} \PYG{l+m+mi}{1} \PYG{o}{\PYGZhy{}} \PYG{n}{player}
        \PYG{k}{if} \PYG{n}{winner} \PYG{o}{==} \PYG{l+m+mi}{0}\PYG{p}{:}
            \PYG{n}{minmax\PYGZus{}wins} \PYG{o}{+=} \PYG{l+m+mi}{1}
        \PYG{c+c1}{\PYGZsh{} player that made the last move wins}
        \PYG{n}{logging}\PYG{o}{.}\PYG{n}{info}\PYG{p}{(}\PYG{l+s+sa}{f}\PYG{l+s+s2}{\PYGZdq{}Player }\PYG{l+s+si}{\PYGZob{}}\PYG{n}{winner}\PYG{l+s+si}{\PYGZcb{}}\PYG{l+s+s2}{ wins in round }\PYG{l+s+si}{\PYGZob{}}\PYG{n}{i}\PYG{o}{+}\PYG{l+m+mi}{1}\PYG{l+s+si}{\PYGZcb{}}\PYG{l+s+s2}{!\PYGZdq{}}\PYG{p}{)}

    \PYG{n}{logging}\PYG{o}{.}\PYG{n}{info}\PYG{p}{(}\PYG{l+s+sa}{f}\PYG{l+s+s2}{\PYGZdq{}Minmax wins }\PYG{l+s+si}{\PYGZob{}}\PYG{n}{minmax\PYGZus{}wins}\PYG{l+s+si}{\PYGZcb{}}\PYG{l+s+s2}{ out of }\PYG{l+s+si}{\PYGZob{}}\PYG{n}{rounds}\PYG{l+s+si}{\PYGZcb{}}\PYG{l+s+s2}{ rounds\PYGZdq{}}\PYG{p}{)}
\end{Verbatim}
